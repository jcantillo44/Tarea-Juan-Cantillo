# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15fYdFZx5FhZTGcYNvqeagDLmjL4gzzDz
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report

# Cargar el dataset (solo una muestra por simplicidad)
df = pd.read_csv('training.1600000.processed.noemoticon.csv', encoding='latin-1', header=None)
df = df[[0, 5]]  # 0 = Sentimiento, 5 = Texto
df.columns = ['sentiment', 'text']

# Filtrar solo 5000 positivos y 5000 negativos
df = df[df['sentiment'].isin([0, 4])]
df = df.groupby('sentiment').head(5000)

# Convertir 0 → 0 (negativo), 4 → 1 (positivo)
df['sentiment'] = df['sentiment'].replace({0: 0, 4: 1})

# Separar datos
X = df['text']
y = df['sentiment']

# Dividir en entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Vectorizar texto
vectorizer = CountVectorizer(stop_words='english')
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# Entrenar modelo
model = MultinomialNB()
model.fit(X_train_vec, y_train)

# Evaluar
y_pred = model.predict(X_test_vec)
print(classification_report(y_test, y_pred))